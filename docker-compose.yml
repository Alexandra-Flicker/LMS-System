version: "3.9"

services:
  lms_db:
    image: postgres:15
    container_name: lms_postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lms_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  lms_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lms_app
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      lms_db:
        condition: service_healthy
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_SSLMODE: ${DB_SSLMODE}
      PORT: ${PORT}
      LOG_LEVEL: ${LOG_LEVEL}
      LOG_FORMAT: ${LOG_FORMAT}
    networks:
      - lms_net

  keycloak-db:
    image: postgres:15
    container_name: keycloak_postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: lms
      POSTGRES_PASSWORD: lms
    ports:
        - "5433:5432"
    volumes:
      - keycloak_data:/var/lib/postgresql/data
      - ./insert.sql:/docker-entrypoint-init db.d/insert.sql
    networks:
      - lms_net

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    container_name: keycloak
    command: start-dev
    depends_on:
      - keycloak-db
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: lms
      KC_DB_PASSWORD: lms
      KC_HOSTNAME_STRICT: "false"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - keycloak_data_app:/var/lib/keycloak_data_app/data
    ports:
      - "8081:8080"
    networks:
      - lms_net

volumes:
  postgres_data:
  keycloak_data:

networks:
  lms_net:
