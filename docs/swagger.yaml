swagger: "2.0"
info:
  title: LMS System API
  description: API для системы управления обучением (Learning Management System)
  version: "1.0"
  contact:
    name: LMS System
    email: support@lms.com
host: localhost:8080
basePath: /api/v1
schemes:
  - http
  - https

securityDefinitions:
  BearerAuth:
    type: apiKey
    in: header
    name: Authorization
    description: "Введите 'Bearer ' + ваш токен авторизации"

definitions:
  Course:
    type: object
    properties:
      id:
        type: integer
        description: Уникальный идентификатор курса
      name:
        type: string
        description: Название курса
      description:
        type: string
        description: Описание курса
      price:
        type: number
        format: float
        description: Стоимость курса
      created_at:
        type: string
        format: date-time
        description: Дата создания курса
      updated_at:
        type: string
        format: date-time
        description: Дата последнего обновления курса
      chapters:
        type: array
        items:
          $ref: '#/definitions/Chapter'
        description: Главы курса

  Chapter:
    type: object
    properties:
      id:
        type: integer
        description: Уникальный идентификатор главы
      course_id:
        type: integer
        description: ID курса, к которому относится глава
      name:
        type: string
        description: Название главы
      description:
        type: string
        description: Описание главы
      order_number:
        type: integer
        description: Порядковый номер главы в курсе
      created_at:
        type: string
        format: date-time
        description: Дата создания главы
      updated_at:
        type: string
        format: date-time
        description: Дата последнего обновления главы

  Lesson:
    type: object
    properties:
      id:
        type: integer
        description: Уникальный идентификатор урока
      chapter_id:
        type: integer
        description: ID главы, к которой относится урок
      name:
        type: string
        description: Название урока
      content:
        type: string
        description: Содержимое урока
      video_url:
        type: string
        description: Ссылка на видео урока
      order_number:
        type: integer
        description: Порядковый номер урока в главе
      created_at:
        type: string
        format: date-time
        description: Дата создания урока
      updated_at:
        type: string
        format: date-time
        description: Дата последнего обновления урока

  UserCourseAccess:
    type: object
    properties:
      id:
        type: integer
        description: Уникальный идентификатор доступа
      user_id:
        type: integer
        description: ID пользователя
      course_id:
        type: integer
        description: ID курса
      has_access:
        type: boolean
        description: Есть ли доступ к курсу
      purchased_at:
        type: string
        format: date-time
        description: Дата покупки курса

  BuyCourseRequest:
    type: object
    required:
      - course_id
    properties:
      course_id:
        type: integer
        description: ID курса для покупки

  CreateCourseRequest:
    type: object
    required:
      - name
      - description
      - price
    properties:
      name:
        type: string
        description: Название курса
        example: "Основы программирования"
      description:
        type: string
        description: Описание курса
        example: "Курс для изучения основ программирования на Python"
      price:
        type: number
        format: float
        description: Стоимость курса
        example: 1999.99

  UpdateCourseRequest:
    type: object
    properties:
      name:
        type: string
        description: Название курса
      description:
        type: string
        description: Описание курса
      price:
        type: number
        format: float
        description: Стоимость курса

  CreateChapterRequest:
    type: object
    required:
      - name
      - description
      - order_number
    properties:
      name:
        type: string
        description: Название главы
        example: "Введение в Python"
      description:
        type: string
        description: Описание главы
        example: "Основные концепции языка Python"
      order_number:
        type: integer
        description: Порядковый номер главы
        example: 1

  UpdateChapterRequest:
    type: object
    properties:
      name:
        type: string
        description: Название главы
      description:
        type: string
        description: Описание главы
      order_number:
        type: integer
        description: Порядковый номер главы

  CreateLessonRequest:
    type: object
    required:
      - name
      - content
      - order_number
    properties:
      name:
        type: string
        description: Название урока
        example: "Переменные и типы данных"
      content:
        type: string
        description: Содержимое урока
        example: "В этом уроке мы изучим основные типы данных в Python..."
      video_url:
        type: string
        description: Ссылка на видео урока
        example: "https://youtube.com/watch?v=example"
      order_number:
        type: integer
        description: Порядковый номер урока
        example: 1

  UpdateLessonRequest:
    type: object
    properties:
      name:
        type: string
        description: Название урока
      content:
        type: string
        description: Содержимое урока
      video_url:
        type: string
        description: Ссылка на видео урока
      order_number:
        type: integer
        description: Порядковый номер урока

  ErrorResponse:
    type: object
    properties:
      error:
        type: string
        description: Описание ошибки

  SuccessResponse:
    type: object
    properties:
      message:
        type: string
        description: Сообщение об успешном выполнении операции

tags:
  - name: public
    description: Публичные эндпоинты (не требуют авторизации)
  - name: user
    description: Пользовательские эндпоинты (требуют авторизацию пользователя)
  - name: admin
    description: Административные эндпоинты (требуют права администратора)

paths:
  # PUBLIC ENDPOINTS
  /public/courses:
    get:
      tags:
        - public
      summary: Получить список всех курсов
      description: Возвращает список всех доступных курсов без требования авторизации
      responses:
        200:
          description: Список курсов успешно получен
          schema:
            type: array
            items:
              $ref: '#/definitions/Course'
        500:
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ErrorResponse'

  /public/courses/{id}:
    get:
      tags:
        - public
      summary: Получить курс по ID
      description: Возвращает информацию о конкретном курсе по его идентификатору
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID курса
      responses:
        200:
          description: Курс найден
          schema:
            $ref: '#/definitions/Course'
        404:
          description: Курс не найден
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ErrorResponse'

  /public/courses/{id}/chapters:
    get:
      tags:
        - public
      summary: Получить главы курса
      description: Возвращает список глав для указанного курса
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID курса
      responses:
        200:
          description: Список глав получен
          schema:
            type: array
            items:
              $ref: '#/definitions/Chapter'
        404:
          description: Курс не найден
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ErrorResponse'

  # USER ENDPOINTS
  /user/courses:
    get:
      tags:
        - user
      summary: Получить курсы пользователя
      description: Возвращает список курсов, к которым у пользователя есть доступ
      security:
        - BearerAuth: []
      responses:
        200:
          description: Список курсов пользователя
          schema:
            type: array
            items:
              $ref: '#/definitions/UserCourseAccess'
        401:
          description: Требуется авторизация
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ErrorResponse'

  /user/courses/buy:
    post:
      tags:
        - user
      summary: Купить курс
      description: Позволяет пользователю приобрести доступ к курсу
      security:
        - BearerAuth: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/BuyCourseRequest'
      responses:
        201:
          description: Курс успешно приобретен
          schema:
            $ref: '#/definitions/SuccessResponse'
        400:
          description: Некорректные данные запроса
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Требуется авторизация
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Курс не найден
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: Курс уже приобретен
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ErrorResponse'

  /user/lessons/{id}:
    get:
      tags:
        - user
      summary: Получить урок по ID
      description: Возвращает содержимое урока, если у пользователя есть доступ к курсу
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID урока
      responses:
        200:
          description: Урок найден
          schema:
            $ref: '#/definitions/Lesson'
        401:
          description: Требуется авторизация
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Нет доступа к уроку
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Урок не найден
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ErrorResponse'

  # ADMIN ENDPOINTS - COURSES
  /admin/courses:
    post:
      tags:
        - admin
      summary: Создать новый курс
      description: Создает новый курс в системе (только для администраторов)
      security:
        - BearerAuth: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCourseRequest'
      responses:
        201:
          description: Курс успешно создан
          schema:
            $ref: '#/definitions/Course'
        400:
          description: Некорректные данные запроса
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Требуется авторизация
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Недостаточно прав доступа
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ErrorResponse'

  /admin/courses/{id}:
    put:
      tags:
        - admin
      summary: Обновить курс
      description: Обновляет информацию о курсе (только для администраторов)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID курса
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateCourseRequest'
      responses:
        200:
          description: Курс успешно обновлен
          schema:
            $ref: '#/definitions/Course'
        400:
          description: Некорректные данные запроса
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Требуется авторизация
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Недостаточно прав доступа
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Курс не найден
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ErrorResponse'

    delete:
      tags:
        - admin
      summary: Удалить курс
      description: Удаляет курс из системы (только для администраторов)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID курса
      responses:
        204:
          description: Курс успешно удален
        401:
          description: Требуется авторизация
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Недостаточно прав доступа
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Курс не найден
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ErrorResponse'

  # ADMIN ENDPOINTS - CHAPTERS
  /admin/courses/{courseId}/chapters:
    post:
      tags:
        - admin
      summary: Создать новую главу
      description: Создает новую главу в указанном курсе (только для администраторов)
      security:
        - BearerAuth: []
      parameters:
        - name: courseId
          in: path
          required: true
          type: integer
          description: ID курса
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateChapterRequest'
      responses:
        201:
          description: Глава успешно создана
          schema:
            $ref: '#/definitions/Chapter'
        400:
          description: Некорректные данные запроса
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Требуется авторизация
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Недостаточно прав доступа
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Курс не найден
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ErrorResponse'

  /admin/chapters/{id}:
    put:
      tags:
        - admin
      summary: Обновить главу
      description: Обновляет информацию о главе (только для администраторов)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID главы
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateChapterRequest'
      responses:
        200:
          description: Глава успешно обновлена
          schema:
            $ref: '#/definitions/Chapter'
        400:
          description: Некорректные данные запроса
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Требуется авторизация
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Недостаточно прав доступа
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Глава не найдена
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ErrorResponse'

    delete:
      tags:
        - admin
      summary: Удалить главу
      description: Удаляет главу из системы (только для администраторов)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID главы
      responses:
        204:
          description: Глава успешно удалена
        401:
          description: Требуется авторизация
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Недостаточно прав доступа
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Глава не найдена
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ErrorResponse'

  # ADMIN ENDPOINTS - LESSONS
  /admin/chapters/{chapterId}/lessons:
    post:
      tags:
        - admin
      summary: Создать новый урок
      description: Создает новый урок в указанной главе (только для администраторов)
      security:
        - BearerAuth: []
      parameters:
        - name: chapterId
          in: path
          required: true
          type: integer
          description: ID главы
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateLessonRequest'
      responses:
        201:
          description: Урок успешно создан
          schema:
            $ref: '#/definitions/Lesson'
        400:
          description: Некорректные данные запроса
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Требуется авторизация
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Недостаточно прав доступа
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Глава не найдена
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ErrorResponse'

  /admin/lessons/{id}:
    put:
      tags:
        - admin
      summary: Обновить урок
      description: Обновляет информацию об уроке (только для администраторов)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID урока
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateLessonRequest'
      responses:
        200:
          description: Урок успешно обновлен
          schema:
            $ref: '#/definitions/Lesson'
        400:
          description: Некорректные данные запроса
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Требуется авторизация
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Недостаточно прав доступа
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Урок не найден
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ErrorResponse'

    delete:
      tags:
        - admin
      summary: Удалить урок
      description: Удаляет урок из системы (только для администраторов)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID урока
      responses:
        204:
          description: Урок успешно удален
        401:
          description: Требуется авторизация
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Недостаточно прав доступа
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Урок не найден
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ErrorResponse'